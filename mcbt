#!/usr/bin/env python3

# For licensing information, see the "LICENSE" text file
from datetime import datetime
import subprocess as sp
import time

# Config variables
WORLDS_FOLDER = ''
BACKUP_DESTINATION = ''

# Change permissions of directories for copying
sp.call(f'chmod -R 777 "{WORLDS_FOLDER}"',shell=True)
sp.call(f'chmod -R 777 "{BACKUP_DESTINATION}"',shell=True)

def backup_worlds():
    sp.run(['osascript', '-e', f'display notification "ENABLED" with title "mcbt"'])
    try:
        # Perform the backup using cp command
        result = sp.run(f'cp -r "{WORLDS_FOLDER}" "{BACKUP_DESTINATION}"', shell=True, capture_output=True, text=True)

        # Check return code
        if result.returncode != 0:
            # Notify about backup error
            error_message = result.stderr.strip() if result.stderr else ""
            sp.run(['osascript', '-e', f'display notification "Error: {error_message}" with title "mcbt"'])
        else:
            date = datetime.now()
            sp.call(f'zip -r "{BACKUP_DESTINATION}/worlds.zip" "{BACKUP_DESTINATION}/saves"',shell=True)
            sp.call(f'rm -rf "{BACKUP_DESTINATION}/saves"',shell=True)
            sp.call('clear',shell=True)
            
    except Exception as e:
        # Handle any unexpected exceptions
        sp.run(['osascript', '-e', f'display notification "Exception: {e}" with title "mcbt"'])

if __name__ == "__main__":
    while True:
        backup_worlds()
        time.sleep(43200)  # Sleep for 12 hours before next backup
